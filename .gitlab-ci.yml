# set the default docker image
image: registry.gitlab.com/tjvb/phpimages:php81

stages:
  - prepare # prepare the cache
  - check # check the codestyles
  - test

default:
  interruptible: true

prepare_cache:
  stage: prepare
  script:
    # Install composer
    - composer validate
    - composer install
  # we use this artifact for all the jobs
  artifacts:
    name: "vendor"
    paths:
      - vendor/*

lint:
  stage: check
  script:
    # lint recursive
    - find src/ -type f -name '*.php' -exec php -l {} \; | (! grep -v "No syntax errors detected" )
  dependencies: []
  needs: []

phpstan:
  stage: check
  script:
    # check for phpstan errors
    - php -d memory_limit=500M vendor/bin/phpstan analyse --error-format=gitlab > phpstan.json
    - cat phpstan.json
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache
  artifacts:
    paths:
      - phpstan.json
    reports:
      codequality: phpstan.json
    when: always

phpmd:
  stage: check
  script:
    - composer phpmd
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

code-style:
  stage: check
  script:
    - composer cs
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

# We check the content with vale
vale:
  image:
    name: registry.gitlab.com/tjvb/tools-images/vale
    entrypoint: [""]
  stage: check
  script:
    - /bin/vale --config=tools/vale/.vale.ini README.md CONTRIBUTING.md
  needs: []
  dependencies: []

infection:
  stage: test
  interruptible: true
  script:
    - composer install
    - vendor/bin/phpunit --migrate-configuration
    - vendor/bin/infection
  artifacts:
    name: "Infection result ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}"
    when: always
    paths:
      - build/infection/infection-summary.log
      - build/infection/infection-per-mutator.md
      - build/infection/infection.log
      - build/infection/infection-log-gitlab.json
      - build/infection/infection-log.json
      - build/infection/infection-log.html
    reports:
      codequality:
        - build/infection/infection-log-gitlab.json
    expire_in: 1 day
    expose_as: Infection log
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

# this is a template that we reuse for the different test jobs
.test_base:
  stage: test
  coverage:  '/^\s*Lines:\s*\d+.\d+\%/'
  artifacts:
    reports:
      junit: phpunitresult/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: phpunitresult/cobertura-coverage.xml
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

test_lowest:
  extends: .test_base
  image: registry.gitlab.com/tjvb/phpimages:php81
  script:
    # Install composer
    - rm -f composer.lock
    - composer update --prefer-lowest
    - vendor/bin/phpunit --coverage-text --colors=never --coverage-cobertura=phpunitresult/cobertura-coverage.xml --log-junit=phpunitresult/junit.xml
    - sed -i 's~ filename="~ filename="src/~' phpunitresult/cobertura-coverage.xml

test:
  extends: .test_base
  parallel:
    matrix:
      - LARAVEL: 9
        TESTBENCH: 7
        PHP:
          - 81
          - 82
          - 83
      - LARAVEL: 10
        TESTBENCH: 8
        PHP:
          - 81
          - 82
          - 83
      - LARAVEL: 11
        TESTBENCH: 9
        PHP:
          - 82
          - 83
          - 84
      - LARAVEL: 12
        TESTBENCH: 10
        PHP:
          - 82
          - 83
          - 84
  image: registry.gitlab.com/tjvb/phpimages:php$PHP
  script:
    - echo "Laravel $LARAVEL"
    - echo "PHP $PHP"
    - echo "TESTBENCH $TESTBENCH"
    - composer require --dev "orchestra/testbench=^$TESTBENCH"
    - vendor/bin/phpunit --migrate-configuration || true
    - XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-text --colors=never --coverage-cobertura=phpunitresult/cobertura-coverage.xml --log-junit=phpunitresult/junit.xml
    - sed -i 's~ filename="~ filename="src/~' phpunitresult/cobertura-coverage.xml

